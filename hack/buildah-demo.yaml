apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: buildah
spec:
  privileged: false # Don't allow privileged pods!
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  runAsUser:
    rule: MustRunAsNonRoot
  volumes:
  - configMap
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  allowedCapabilities:
  - SETGID
  - SETUID
  seLinux:
    rule: RunAsAny

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: buildah
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - buildah

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: buildah
roleRef:
  kind: Role
  name: buildah
  apiGroup: rbac.authorization.k8s.io
subjects:
# Authorize all service accounts in a namespace (recommended):
- kind: Group
  name: system:serviceaccounts
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: buildah
automountServiceAccountToken: false

---
apiVersion: batch/v1
kind: Job
metadata:
  name: buildah
spec:
  ttlSecondsAfterFinished: 100
  template:
    spec:
      serviceAccountName: buildah
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - name: buildah
        image: ghcr.io/austriandatalab/execdat-operator-buildah:main
        command:
        - "buildah"
        args:
        - "build"
        - "-t"
        - "test"
        - "-f"
        - "/mnt/Dockerfile"
        securityContext:
          capabilities:
            add:
            - SETGID
            - SETUID
        resources: {}
        volumeMounts:
        - mountPath: /mnt
          name: volume
      volumes:
      - name: volume
        configMap:
          name: dockerfile
      restartPolicy: Never

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dockerfile
data:
  Dockerfile: |
    FROM ghcr.io/austriandatalab/execdat-operator-buildah:main
    WORKDIR /home/buildah
    # Just keep the container running
    CMD ["sleep", "infinity"]

---
apiVersion: batch/v1
kind: Job
metadata:
  name: Run
spec:
  ttlSecondsAfterFinished: 100
  template:
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      containers:
      - name: Run
        image: python:latest
        command:
        - "sh"
        args:
        - "/mnt/init.sh"
        resources: {}
        volumeMounts:
        - mountPath: /mnt
          name: volume
      volumes:
      - name: volume
        configMap:
          name: init.sh
          defaultMode: 0500
      restartPolicy: Never

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init.sh
data:
  init.sh: |
    #!/bin/bash
    mkdir -p $INPUT_DATA_PATH                                     # create input data directory
    wget --directory-prefix=$INPUT_DATA_PATH $INPUT_DATA_URL      # download input data into the input data directory
    (cd $INPUT_DATA_PATH && eval $INPUT_DATA_TRANSFORM_COMMAND)   # execute the transform command in the input data directory
    mkdir -p $OUTPUT_DATA_PATH                                    # create the output data directory
    (cd $REPOSITORY_PATH && eval $REPOSITORY_RUN_COMMAND)         # execute the run command in the repo root directory
immutable: true
